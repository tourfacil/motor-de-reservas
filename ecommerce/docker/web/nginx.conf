user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;

pid /run/nginx.pid;

events {
  worker_connections 1024;
  multi_accept on;
  use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_x_forwarded_for" '
                         '"$host" sn="$server_name" '
                         'rt=$request_time '
                         'ua="$upstream_addr" us="$upstream_status" '
                         'ut="$upstream_response_time" ul="$upstream_response_length" '
                         'cs=$upstream_cache_status';

    # do not show the nginx version
    server_tokens   off;

    # Expires map
    map $sent_http_content_type $expires {
        default                    off;
        text/css                   max;
        application/javascript     max;
        ~image/                    max;
        ~font/                     max;
    }

    # Servidor sem SSL e sem WWW redireciona para SSL e com WWWW
    server {
        listen 80;
        listen [::]:80;
        server_name tourfacil.com.br www.tourfacil.com.br;

        # CertBot needs either port 80 or 443 open to connect to the
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location /nginx_status {
            stub_status on;
            allow 127.0.0.1;
            deny all;
        }

        location / {
            return 301 https://www.tourfacil.com.br$request_uri;
        }
    }

    # Servidor com SSL mas sem WWW redireciona para SSL e com WWWW
    server {
        listen 443 ssl;
        server_name tourfacil.com.br;

        # Certificado gerado pelo bot
        ssl_certificate /etc/letsencrypt/live/tourfacil.com.br/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/tourfacil.com.br/privkey.pem;

        location /nginx_status {
            stub_status on;
            allow 127.0.0.1;
            deny all;
        }

        location / {
            return 301 https://www.tourfacil.com.br$request_uri;
        }
    }

    # Servidor default com SSl e WWWW
    server {

        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        server_name www.tourfacil.com.br;

        # Certificado gerado pelo bot
        ssl_certificate /etc/letsencrypt/live/tourfacil.com.br/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/tourfacil.com.br/privkey.pem;

        # best-practice HTTPS configurations for nginx
        include /etc/nginx/options-ssl-nginx.conf;
        ssl_dhparam /etc/nginx/ssl-dhparams.pem;

        # Header laravel
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";

        expires $expires;

        root /var/www/app/public;
        index index.php;
        access_log /var/log/nginx/access.log main_ext;
        error_log  /var/log/nginx/error.log warn;

        charset   utf-8;

        gzip on;
        gzip_vary on;
        gzip_disable "msie6";
        gzip_comp_level 6;
        gzip_min_length 1100;
        gzip_buffers 16 8k;
        gzip_proxied any;
        gzip_types
        	text/html
            text/plain
            text/css
            application/javascript
            text/javascript
            text/js
            text/xml
            application/xml
            application/xml+rss
            application/json
            font/ttf
            font/otf
            font/x-woff
            font/woff2
            image/svg+xml
            application/ttf
            application/otf
            application/truetype
            application/opentype
            application/x-opentype
            application/font-woff
            application/eot
            application/font;

        location /nginx_status {
            stub_status on;
            allow 127.0.0.1;
            deny all;
        }

        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; }

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php:9000;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            fastcgi_index index.php;
            include fastcgi_params;
        }

        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|svg|woff|woff2|ttf)\$ {
          expires 1M;
          access_log off;
          add_header Cache-Control public;
        }

        location ~* \.(?:css|js)\$ {
          expires 7d;
          access_log off;
          add_header Cache-Control public;
        }

        # missing vary header on zippable fonts
        location ~* \.(?:eot|ttf|svg|woff|woff2)$ {
          access_log off;
          add_header Vary Accept-Encoding;
        }

        location ~ /\.ht {
            deny  all;
        }
    }
}
